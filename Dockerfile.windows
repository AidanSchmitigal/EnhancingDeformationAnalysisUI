# Use Windows Server Core LTSC 2022
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set shell to PowerShell
SHELL ["powershell", "-Command"]

# Install Chocolatey (for CMake, Git)
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Ensure Chocolatey is up-to-date
RUN choco upgrade chocolatey -y

# Install essential tools via Chocolatey (excluding Visual Studio)
RUN choco install -y cmake git \
    RefreshEnv.cmd

# Install Visual Studio Build Tools (without using Chocolatey)
RUN Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vs_BuildTools.exe -OutFile vs_BuildTools.exe; \
    Start-Process -FilePath vs_BuildTools.exe -ArgumentList "--quiet --wait --norestart --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.Windows10SDK.19041" -NoNewWindow -Wait; \
    Remove-Item vs_BuildTools.exe

# Update PATH for Python, CMake, MSVC, and TensorFlow (lib and include)
RUN $env:Path += ';C:\Program Files\CMake\bin;C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\bin\Hostx64\x64;C:\tensorflow\lib;C:\tensorflow\include'; \
    [Environment]::SetEnvironmentVariable('Path', $env:Path, [EnvironmentVariableTarget]::Machine)

# Install TensorFlow C API (CPU version)
RUN Invoke-WebRequest -Uri "https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-2.16.0.zip" -OutFile "tensorflow.zip"; \
    Expand-Archive -Path "tensorflow.zip" -DestinationPath "C:\tensorflow"; \
    Remove-Item "tensorflow.zip"

# Install OpenCV (build from source for CMake compatibility)
RUN git clone --depth 1 --branch 4.10.0 https://github.com/opencv/opencv.git; \
    mkdir opencv\build; \
    cd opencv\build; \
    cmake -G "Visual Studio 17 2022" \
          -D BUILD_opencv_python2=OFF \
          -D BUILD_opencv_python3=OFF \
          -D WITH_QT=OFF \
          -D WITH_FFMPEG=OFF \
          -D BUILD_EXAMPLES=OFF \
          -D INSTALL_C_EXAMPLES=OFF \
          ..; \
    cmake --build . --config Release; \
    cmake --install . --prefix "C:\opencv"; \
    cd ..\..; \
    Remove-Item -Recurse -Force opencv

# Set environment variables for CMake to find TensorFlow and OpenCV
RUN [Environment]::SetEnvironmentVariable('OpenCV_DIR', 'C:\opencv', [EnvironmentVariableTarget]::Machine)

RUN echo 'done'

# Working directory
WORKDIR C:\

# Default command
CMD ["powershell"]
