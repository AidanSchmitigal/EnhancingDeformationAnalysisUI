name: CI

on:
  push:
    branches: [ ci/cd ]
  pull_request:
    branches: [ ci/cd ]

jobs:
  build-windows:
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Lowercase Repository Name
        id: repo_name
        run: echo "REPO_NAME_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

      - name: Pull Container and Test Build
        shell: powershell
        run: |
          echo "Using container image: ghcr.io/${REPO_NAME_LOWER}/ci-image-windows:latest"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ghcr.io/${REPO_NAME_LOWER}/ci-image-windows:latest
          docker run --rm -v ${PWD}:C:\app ci-image-windows:latest powershell -Command "mkdir build; cd build; cmake -G 'Visual Studio 17 2022' ..; cmake --build . --config Release"

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Set Lowercase Repository Name
        id: repo_name
        run: echo "REPO_NAME_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Pull and Run Container
        run: |
          echo "Using container image: ghcr.io/${REPO_NAME_LOWER}/ci-image-linux:latest"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ghcr.io/${REPO_NAME_LOWER}/ci-image-linux:latest
          docker run --rm -v $PWD:/app -w /app ghcr.io/${REPO_NAME_LOWER}/ci-image-linux:latest bash -c "
            mkdir build && cd build && cmake .. && make -j$(nproc)
          "
