name: Build and Package Application

on:
  push:
    tags:
      - "v*" # Trigger on tags like v0.1, v1.2.3
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    name: Build for ${{ matrix.config.os_name }} (${{ matrix.config.arch }})
    runs-on: ${{ matrix.config.os_runner }}
    strategy:
      fail-fast: false # Allow other jobs to continue if one fails
      matrix:
        config:
          - os_name: windows
            os_runner: windows-latest
            arch: x86_64
            python_exe: python # On Windows, python.exe should be in PATH
            os_package_extension: zip
            opencv_setup_cmd: |
              choco install opencv --version=4.8.0 --yes --force
              OPENCV_INSTALLED_PATH="C:/tools/opencv/build" # Verify this path
              if [ -d "$OPENCV_INSTALLED_PATH" ]; then
                echo "OpenCV_DIR=${OPENCV_INSTALLED_PATH}" >> $GITHUB_ENV
                echo "Successfully set OpenCV_DIR to ${OPENCV_INSTALLED_PATH}"
              else
                echo "Error: OpenCV build directory not found at ${OPENCV_INSTALLED_PATH} after choco install."
                ls -R /c/tools # List directories to help debug
                ls -R /c/ProgramData/chocolatey/lib
                exit 1
              fi
          - os_name: macos
            os_runner: macos-14 # For arm64 (M1/M2); macos-14 is ARM.
            arch: arm64
            python_exe: python3
            os_package_extension: dmg
            opencv_setup_cmd: |
              brew install opencv@4
              echo "OpenCV_DIR=$(brew --prefix opencv@4)/lib/cmake/opencv4" | tee -a $GITHUB_ENV
          - os_name: linux
            os_runner: ubuntu-latest
            arch: x86_64
            python_exe: python3
            os_package_extension: tar.gz
            opencv_setup_cmd: |
              sudo apt-get update
              sudo apt-get install -y libopencv-dev build-essential libjpeg-dev libpng-dev xorg-dev libwayland-dev libxkbcommon-dev libopencv-dev wayland-protocols extra-cmake-modules

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive" # If you use submodules for libs like cppflow

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10" # Specify a version

      - name: Install Python dependencies
        run: ${{ matrix.config.python_exe }} -m pip install requests tqdm

      - name: Download and setup TensorFlow
        run: |
          ${{ matrix.config.python_exe }} setup_tensorflow.py ${{ matrix.config.os_name }} ${{ matrix.config.arch }}

      - name: Download and setup PyTorch
        run: |
          ${{ matrix.config.python_exe }} setup_pytorch.py ${{ matrix.config.os_name }} ${{ matrix.config.arch }}

      - name: Setup OpenCV
        shell: bash
        run: |
          ${{ matrix.config.opencv_setup_cmd }}

      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DUI_INCLUDE_TENSORFLOW=ON -DUI_INCLUDE_PYTORCH=ON -DUI_RELEASE=ON -DUI_PROFILE=OFF

      - name: Build with CMake
        working-directory: build
        run: cmake --build . --config Release --parallel

      - name: Package with CPack
        working-directory: build
        run: |
          cpack -C Release --verbose
          ls -R

      - name: Upload build artifact (package)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.os_name }}-${{ matrix.config.arch }}-package
          path: |
            build/*.zip
            build/*.tar.gz
            build/*.dmg
            build/*.deb
            build/*.rpm
          if-no-files-found: error

      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.${{ matrix.config.os_package_extension }}
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.config.os_name }}-${{ matrix.config.arch }}.${{ (matrix.config.os_name == 'windows' && 'zip') || (matrix.config.os_name == 'macos' && 'dmg') || 'tar.gz' }}
          tag: ${{ github.ref }}
          overwrite: true
